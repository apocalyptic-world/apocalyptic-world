:: Settlement management - Test

/* TODO -- perhaps coordinate this with family.js
 */

<h1>Family and relations</h1>

<h2><<=$player.name>>'s family tree</h2>
<<set _replace = setup.player.charactersCheck()>>
<<run setup.player.updateFamily(true)>>
<<set _shown = { mc: true}>>
<<set _shownPreg = {}>>
<table class="mc-stats-table">
	<<set _wivesTexts = []>>
	<<for _wifeId range $player.family?.wives ?? []>>
		<<set _shown[_wifeId] = true>>
		<<set _wifeText = setup.player.npcRelationText(_wifeId)>>
		<<if _wifeText>>
			<<set _wivesTexts.push(_wifeText)>>
		<</if>>
	<</for>>
	<<if _wivesTexts.length>>
		<tr><td colspan ="2">Wives you married</td></tr>
		<tr>
			<td></td>
			<td><<=_wivesTexts.sort().join('<br/>')>></td>
		</tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<set _childmothersTexts = []>>
	<<for _childmotherId range $player.family?.childmothers ?? []>>
		<<set _shown[_childmotherId] = true>>
		<<set _childmotherText = setup.player.npcRelationText(_childmotherId)>>
		<<if _childmotherText>>
			<<set _childmothersTexts.push(_childmotherText)>>
		<</if>>
	<</for>>
	<<if _childmothersTexts.length>>
		<tr><td colspan ="2">Mothers to your children</td></tr>
		<tr>
			<td></td>
			<td><<=_childmothersTexts.sort().join('<br/>')>></td>
		</tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<set _kidsTexts = []>>
	<<for _kidId range $player.family?.kids ?? []>>
		<<set _shown[_kidId] = true>>
		<<set _kidText = setup.player.npcRelationText(_kidId)>>
		<<if _kidText>>
			<<set _kidsTexts.push(_kidText)>>
		<</if>>
	<</for>>
	<<if _kidsTexts.length>>
		<tr><td colspan ="2">Children you fathered</td></tr>
		<tr>
			<td></td>
			<td><<=_kidsTexts.sort().join('<br/>')>></td>
		</tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	/*
	<tr>
	  <td>From your view</td>
	  <td><<=setup.player.npcRelationText('mc', false, true)>></td>
	</tr>
	<tr><td>&nbsp;</td></tr>
	*/
		
	<<set _pregTexts = []>>
	<<set _characters = []>>
	<<for _npcId, _npc range $characters>>
		<<if (typeof _npc.pregnancy !== 'undefined')>>
			<<set _fatherId = _npc.pregnancy_father ?? 'unknown'>>
			<<if _fatherId === 'unnkown' && typeof _npc.pregnancy_event !== 'undefined'>>
				<<set _fatherId = '(' + _npc.pregnancy_event + ')'>>
			<</if>>
			<<if _fatherId === 'mc'>>
				<<set _shown[_npc.id] = true>>
				<<set _pregTexts.push(setup.player.npcRelationText(_npc.id, false))>>
			<</if>>
		<</if>>
	<</for>>
	<<for _npcIndex, _npc range ($guests ?? []).concat($slaves ?? []).concat($nursery ?? [])>>
		<<if (typeof _npc.pregnancy !== 'undefined')>>
			<<set _fatherId = _npc.pregnancy_father ?? 'unknown'>>
			<<if _fatherId === 'unknown' && typeof _npc.pregnancy_event !== 'undefined'>>
				<<set _fatherId = '(' + _npc.pregnancy_event + ')'>>
			<</if>>
			<<if _fatherId === 'mc'>>
				<<set _shown[_npc.id] = true>>
				<<set _pregTexts.push(setup.player.npcRelationText(_npc.id, false))>>
			<</if>>
		<</if>>
	<</for>>
	<<if _pregTexts.length>>
		<tr><td colspan ="2">Pregnant carrying your child</td></tr>
		<tr>
			<td></td>
			<td><<=_pregTexts.sort().join('<br/>')>></td>
		</tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>
</table>

<h2>Other's family trees (Test)</h2>
/* <<warning 'Might show up in coming version of the game. Maybe!'>> */

<<set _npcs = new Map>>
<<set _rels = {
	child:	   {}, /* {parent}{kid} */
	father:	   {}, /* {father}{kid} */	
	orphan:    {}, /* {kid} */
	marriage:  {}, /* husband}{wife} */
	mother:    {}, /* {mother}{kid} */
	parent:    {}, /* {father}{mother} */
	pregnancy: {}, /* {spermdonor}{pregnant} */
	single:    {}  /* {person} */
}>>
<<set _outs = {
	child:	   {},
	father:	   {},
	females:   [],
	orphan:    [],
	males:	   [],
	marriage:  {}, 
	mother:    {},
	parent:    {}, 
	pregnancy: {}, 
	single:    []  
}>>

<<for _npcID, _npc range $characters>>
	<<set _npc.id ??= _npcID>>
<</for>>
<<for _npcIndex, _npc range ($guests ?? []).concat($slaves ?? []).concat($nursery ?? []).concat(Object.values($characters ?? {}))>>
	<<if typeof _npc.id === 'undefined'>>
		 DBG undefined id <<=_npc.name>>?<br/>
		<<continue>>
	<<elseif typeof _npc.name === 'undefined'>>
		/* rose ends here -- DBG undefined name <<=_npc.id>>?<br/> */
		<<continue>>
	<<elseif _npc.id  === 'negan' || (_replace.has(_npc.id) && _replace.get(_npc.id)  === 'negan' )>>
		/*DBG Negan?  <<=_npc.id>> <<=_npc.name>>?<br/> */
		<<continue>>
	<</if>>

	<<set _npcs.set(_npc.id, _npc)>>
	
	<<if (typeof _npc.pregnancy !== 'undefined')>>
		<<set _fatherId = _npc.pregnancy_father ?? 'unknown'>>
		<<if _fatherId === 'unknown' && (_npc?.pregnancy_event ?? '')>>
			<<set _fatherId = '(' + _npc.pregnancy_event + ')'>>
		<</if>>

		/*
		<<set _rels.pregnancy[_fatherId] ??= {}>>
		<<set _rels.pregnancy[_fatherId][_npc.id] = true>>
		 */
		<<if _fatherId !== 'mc'>>
			<<set _outs.pregnancy[_fatherId] ??= []>>
			<<set _outs.pregnancy[_fatherId].push(setup.player.npcRelationText2(_npc, true, true))>>
			<<set _shownPreg[_npc.id] = true>>
		<</if>>
	<</if>>

	<<if !_npc.hasOwnProperty('family')>>
		<<if !_npc.hasOwnProperty('birthDate')>>
			<<if _npc.id !== 'horse'>>
				DBG missing birthday for <<=_npc.name>><br/>
			<</if>>
			<<set _rels.single[_npc.id] = true>>
		<<elseif setup.getAge(_npc) < 18>>
			<<set _rels.orphan[_npc.id] = true>>
		<<else>>
			<<set _rels.single[_npc.id] = true>>
		<</if>>
		<<continue>>
	<</if>>

	<<set _fatherID = null>>
	<<set _motherID = null>>
	<<set _family = _npc.family>>
	<<for _reltype, _data range _family>>
		<<if _reltype === 'husband'>>
			<<set _husbandID = _data>>
			<<set _rels.marriage[_husbandID] ??= {}>>
			<<set _rels.marriage[_husbandID][_npc.id] = true>>
			<<set _shown[_npc.id] = true>>

			<<set _wifeID = _npc.id>>
			<<set _husband = setup.getNpcById(_husbandID)>>
			<<if _husband>>
				<<set _husband.family ??= {}>>
				<<set _husband.family.wives ??= []>>
				<<if (!_husband.family.wives.includes(_wifeID))>>
					<<run _husband.family.wives.push(_wifeID)>>
				<</if>>
			<</if>>
		<<elseif _reltype === 'wives'>>
			<<set _wives = _data>>
			<<set _rels.marriage[_npc.id] ??= {}>>
			<<for _wifeID range _wives>>
				<<set _rels.marriage[_npc.id][_wifeID] = true>>
				<<set _shown[_wifeID] = true>>

				<<set _husbandID = _npc.id>>
				<<set _wife =  setup.getNpcById(_wifeID)>>
				<<if _wife>>
					<<set _wife.family ??= {}>>
					<<set _wife.family.husband ??= _husbandID>>
				<</if>>
			<</for>>
		<<elseif _reltype === 'father'>>
			<<set _fatherID = _data ?? 'unknown'>>
			<<if _fatherID !== 'unknown'>>
				<<set _kidID =  _npc.id>>
				<<if _replace.has(_kidID)>>
					<<set _kidID = _replace.get(_kidID)>>
				<</if>>

				<<set _rels.father[_fatherID] ??= {}>>
				<<set _rels.father[_fatherID][_npc.id] = true>>
				<<set _shown[_npc.id] = true>>
				<<set _father = setup.getNpcById(_fatherID)>>
				<<if _father>>
					<<set _father.family ??= {}>>
					<<set _father.family.kids ??= []>>
					<<if (!_father.family.kids.includes(_kidID))>>
						<<run _father.family.kids.push(_kidID)>>
					<</if>>
				<</if>>
			<<else>>
				<<set _fatherID = null>>
			<</if>>
		<<elseif _reltype === 'mother'>>
			<<set _motherID = _data>>
			<<if _motherID ?? 'unknown' !== 'unknown'>>
				<<set _kidID =  _npc.id>>
				<<if _replace.has(_kidID)>>
					<<set _kidID = _replace.get(_kidID)>>
				<</if>>

				<<set _rels.mother[_motherID] ??= {}>>
				<<set _rels.mother[_motherID][_npc.id] = true>>
				<<set _shown[_npc.id] = true>>
				<<set _mother = setup.getNpcById(_motherID)>>
				<<if _mother>>
					<<set _mother.family ??= {}>>
					<<set _mother.family.kids ??= []>>
					<<if (!_mother.family.kids.includes(_kidID))>>
						<<run _mother.family.kids.push(_kidID)>>
					<</if>>
				<</if>>
			<<else>>
				<<set _motherID = null>>
			<</if>>
		<<elseif _reltype === 'kids'>>
			<<set _kids = _data>>
			<<set _rels.child[_npc.id] ??= {}>>
			<<for _i, _kidID range _kids>>
				<<if _replace.has(_kidID)>>
					<<set _new = _replace.get(_kidID)>>
					<<if _kids.includes(_new)>>
						<<run _kids.splice(_i, 1)>>
						<<set _i-->>
					<</if>>
					<<set _kidID = _new>>
				<</if>>

				<<set _rels.child[_npc.id][_kidID] = true>>
				<<set _shown[_kidID] = true>>

				<<set _parentID = _npc.id>>
				<<set _kid = setup.getNpcById(_kidID)>>
				<<if _kid>>
					<<set _kid.family ??= {}>>
					<<if ['girl'].includes(setup.player.npcGenderClass(_npc))>>
						<<set _kid.family.mother ??= _parentID>>
					<<else>>
						<<set _kid.family.father ??= _parentID>>
					<</if>>
				<</if>>
			<</for>>
		<<else>>
			DBG Strange relation: <<=_reltype>><br/><br/>
		<</if>>
		<<if _fatherID && _motherID>>
			<<set _rels.parent[_fatherID] ??= {}>>
			<<set _rels.parent[_fatherID][_motherID] = true>>
			<<set _shown[_motherID] = true>>
		<</if>>
	<</for>>
<</for>>

/* male relations go first */
<<for _reltype range ['father', 'marriage', 'parent',  'pregnancy']>>
	<<for _maleID, _others range _rels[_reltype]>>
		<<if _maleID !== 'mc'>>
			<<if _npcs.has(_maleID) && !_shown[_maleID] >>
				<<set _outs.males.push(setup.player.npcRelationText2(_npcs.get(_maleID), true, true))>>
				<<set _shown[_maleID] = true>>
			<</if>>

			<<for _npcID, _dummy range _others>>
				<<if _replace.has(_npcID)>>
					<<set _npcID = _replace.get(_npcID)>>
				<</if>>

				<<if _npcs.has(_npcID)>>
					<<set _outs[_reltype][_maleID] ??= []>>
					<<set _outs[_reltype][_maleID].push(setup.player.npcRelationText2(_npcs.get(_npcID), true, true))>>
					<<set _shown[_npcID] = true>>
				<</if>>
			<</for>>
		<</if>>
	<</for>>
<</for>>

/*<<for _reltype range ['mother', 'parent']>> */
<<for _reltype range ['mother']>>
	<<for _parentID, _children range _rels[_reltype]>>
		<<if _npcs.has(_parentID) && !_shown[_parentID]>>
			<<set _outs.females.push(setup.player.npcRelationText2(_npcs.get(_parentID), true, true))>>
			<<set _shown[_parentID] = true>>

			<<for _childID, _dummy range _children>>
				<<if _npcs.has(_childID)>>
					<<set _outs[_reltype][_parentID] ??= []>>
					<<set _outs[_reltype][_parentID].push(setup.player.npcRelationText2(_npcs.get(_childID), true, true))>>
					<<set _shown[_childID] = true>>
				<</if>>
			<</for>>
		<</if>>
	<</for>>
<</for>>

<<for _reltype range ['orphan', 'single']>>
	<<for _npcID, _dummy range _rels[_reltype]>>
		<<if  _npcs.has(_npcID) && !_shown[_npcID] && !_shownPreg[_npcID]>>
			<<set _outs[_reltype].push(setup.player.npcRelationText2(_npcs.get(_npcID), true, true) + (_npcID === 'horse' ? ' <strong style="color:yellow">[</strong>Yeah! Yeah! It\'s a horse, but it counts anyway...<strong style="color:yellow">]</strong>' :''))>>
			<<set _shown[_npcID] = true>>
		<</if>>
	<</for>>
<</for>>

<table class="mc-stats-table">
	<<if  (_outs.males ?? []).length>>
		<tr><td colspan="2">Males with families</td></tr>
		<tr><td></td> <td><<=_outs.males.sort().join('<br/>')>></td></tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if Object.keys(_outs.marriage).length>>
		<tr><td>Husband</td> <td>Wives</td></tr>
		<<for _id, _text range _outs.marriage>>
			<<set _name = setup.getNpcById(_id)?.name ?? _id>>
			<tr>
				<td>_name</td>
				<td><<=_text.sort().join('<br/>')>></td>
			</tr>
		<</for>>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if Object.keys(_outs.parent).length>>
		<tr><td>Father</td> <td>Mother</td></tr>
		<<for _id, _text range _outs.parent>>
			<<set _name = setup.getNpcById(_id)?.name ?? _id>>
			<tr>
				<td>_name</td>
				<td><<=_text.sort().join('<br/>')>></td>
			</tr>
		<</for>>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if Object.keys(_outs.father).length>>
		<tr><td>Father</td> <td>Children</td></tr>
		<<for _id, _text range _outs.father>>
			<<set _name = setup.getNpcById(_id)?.name ?? _id>>
			<tr>
				<td>_name</td>
				<td><<=_text.sort().join('<br/>')>></td>
			</tr>
		<</for>>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if  (_outs.females ?? []).length>>
		<tr><td colspan="2">Unconnected females with families</td></tr>
		<tr><td></td> <td><<=_outs.females.sort().join('<br/>')>></td></tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if Object.keys(_outs.mother).length>>
		<tr><td>Single mother</td> <td>Children</td></tr>
		<<for _id, _text range _outs.mother>>
			<<set _name = setup.getNpcById(_id)?.name ?? _id>>
			<tr>
				<td>_name</td>
				<td><<=_text.sort().join('<br/>')>></td>
			</tr>
		<</for>>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if Object.keys(_outs.child).length>>
		<tr><td>Parent<br/>(this shouldn't happen)</td> <td>Children</td></tr>
		<<for _id, _text range _outs.child>>
			<<set _name = setup.getNpcById(_id)?.name ?? _id>>
			<tr>
				<td>_name</td>
				<td><<=_text.sort().join('<br/>')>></td>
			</tr>
		<</for>>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if  (_outs.orphan ?? []).length>>
		<tr><td colspan="2">Orphan children</td></tr>
		<tr><td></td> <td><<=_outs.orphan.sort().join('<br/>')>></td></tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if Object.keys( _outs.pregnancy).length>>
		<tr><td>"Spermdonor"</td> <td>Pregnant</td></tr>
		<<for _id, _text range _outs.pregnancy>>
			<<set _name = setup.getNpcById(_id)?.name ?? _id>>
			<tr>
				<td>_name</td>
				<td><<=_text.sort().join('<br/>')>></td>
			</tr>
		<</for>>
		<tr><td>&nbsp;</td></tr>
	<</if>>

	<<if  (_outs.single ?? []).length>>
		<tr><td colspan="2">All other singles</td></tr>
		<tr><td></td> <td><<=_outs.single.sort().join('<br/>')>></td></tr>
		<tr><td>&nbsp;</td></tr>
	<</if>>

</table>

