:: Widget - sleep [widget]
<<widget sleep>>
	<<set _t0 = performance.now()>>
	<<run setup.sleepMessages.init()>>
	<<include 'Bedrom - auto_morning'>>
	<<if _outputAutoList>>
		<<run setup.sleepMessages.messages.rules = [_outputAutoList]>>
	<</if>>
	<<set $game.sickPeople = []>>
	<<run delete $tmpGirlViewBack>>
	<<run delete $tmpGirlBack>>
	<<unset $pregnancyHappening, $pregnancyStreetsHappening, $scavengingDidntReturn>>
	<<set _energyPenalty = 0>>
	<<if $gameDate.getHours() < 8>>
		<<set _addDay = 0>>
		<<set _energyPenalty = 8 - $gameDate.getHours()>>
	<<else>>
		<<set _addDay = 1>>
	<</if>>
	<<set _totals = {caps: 0, food: 0, hay: 0, wood: 0}>>
	
	<<run 
		$gameDate.setDate($gameDate.getDate() + _addDay);
		$gameDate.setHours(8);
		$gameDate.setMinutes(0);
	>>
	
	<<if typeof $storage === 'undefined'>>
  		<<newinv $storage>>
	<</if>>
	<<set _isStorageAvailable = ($game.location.shop ?? false)>>

  <<set $player.energy = $player.maxEnergy>>
  <<run delete $player?.quests.hottub>>
  <<set _totals.food -= setup.cabinInventory.has('food') ? 1 : 0>>
  <<if $storage.has('food')>>
  		<<drop $storage 'food' 1>>
		<<set $player.hunger = 100>>
  <<elseif $backpack.has('food')>>
  		<<drop $backpack 'food' 1>>
		<<set $player.hunger = 100>>
  <<else>>
  	  <<set $player.hunger -= 30>>
	  <<run setup.sleepMessages.addMain('<span class="starving">You are starving!</span>')>>
  <</if>>
  <<set $player.mast to false>>
  <<set $player.showered to false>>
  <<set $player.fight_today to false>>
  <<set $player.drunk = 0>>
  <<set $player.nap = false>>
  <<set $player.metTransGirl = false>>
  <<horny 5>>
  <<set $game.day += 1>>
  
  <<for _locationEventI, _locationEvent range ($locationEvents ?? {})>>
  	<<set $locationEvents[_locationEventI] = false>>
  <</for>>
  
<<set _giveFood = (($game.location.greenhouse ?? false) ? 2 : 1)>>

<<set _isHeatWave = $weather?.heatWave ?? false>>
<<set _isSandStorm = $weather?.sandStorm ?? false>>

<<set _hasWorkingHospital = setup.hasWorkingHospital()>>
<<set _hasDoctor = setup.hasDoctor()>>
// Horse
<<if ($player.horse ?? false)>>
	<<if typeof $characters.horse === 'undefined'>>
		<<set $characters.horse = {
			name: $player.horse,
			food: 100
		}>>
	<</if>>
	<<set $characters.horse.food -= 40>>
  	<<set _totals.hay -= setup.cabinInventory.has('hay') ? 1 : 0>>
	<<if $storage.has('hay')>>
		<<drop $storage 'hay' 1>>
		<<set $characters.horse.food = 100>>
	<<elseif $backpack.has('hay')>>
		<<drop $backpack 'hay' 1>>
		<<set $characters.horse.food = 100>>
	<<elseif $characters.horse.food >0>>
		<<run setup.sleepMessages.addMain('<span class="starving">Your horse is starving!</span>')>>
	<</if>>
	
	<<if $characters.horse.food <= 0>>
		<<run delete $player.horse>>
		<<run delete $characters.horse>>
		<<run setup.sleepMessages.addMain('<span class="dead">Your horse died of starvation!</span>')>>
		<<set _totals['horse'] = -1>>
	<</if>>
<</if>>

<<set _randomScavengingItems = clone(setup.items.scavenging)>>
<<for _scavengingItemKey, _scaveningItemChance range setup.items.scavenging_chance>>
	<<if setup.percentageChance(_scaveningItemChance)>>
		<<run _randomScavengingItems.push(_scavengingItemKey)>>
	<</if>>
<</for>>
<<for _scavengingItemKey, _scavengingItem range _randomScavengingItems>>
	<<if typeof setup.items.scavenging_max[_scavengingItem] !== 'undefined' && setup.items.scavenging_max[_scavengingItem] < setup.cabinInventory.count(_scavengingItem)>>
		<<run _randomScavengingItems.splice(_scavengingItemKey, 1)>>
	<</if>>
<</for>>

<<for _i to 0; _i lt $slaves.length; _i++>>
	<<capture _i>>
		<<set _npc = $slaves[_i]>>
		<<set $slaves[_i].talked to false>>
		<<set $slaves[_i].milked to false>>
		<<set $slaves[_i].groped to false>>
		<<set $slaves[_i].washed = false>>
		<<set $slaves[_i].workout to false>>
		<<set $slaves[_i].gift = false>>
		<<set $slaves[_i].cosmetics = false>>
		<<set $slaves[_i].offerSlave = false>>
		<<set $slaves[_i].drunk = 0>>
		<<if $slaves[_i].horny < 80>>
			<<set $slaves[_i].horny++>>
		<</if>>
		
		<<if typeof $slaves[_i].stats  === 'undefined'>>
			<<set $slaves[_i].stats = {}>>
		<</if>>

		// buttplug
		<<if $slaves[_i].buttplug && $slaves[_i].anal < 20>>
			<<set $slaves[_i].anal++>>
		<</if>>

		// dumbbell
		<<if setup.npcInventoryHas($slaves[_i], 'dumbbell') && $slaves[_i].strength < 30>>
			<<set $slaves[_i].strength++>>
		<</if>>

		// Wash beauty
		<<if typeof $slaves[_i].washDays !== 'undefined'>>
			<<set $slaves[_i].washDays-->>
			<<set $slaves[_i].beauty -= $slaves[_i].washBeauty>>
			<<if $slaves[_i].washDays <= 0>>
				<<run delete $slaves[_i].washDays>>
			<</if>>
		<</if>>

		<<if typeof $slaves[_i].noPregnancyDays !== 'undefined'>>
			<<set $slaves[_i].noPregnancyDays-->>
			<<if $slaves[_i].noPregnancyDays <= 0>>
				<<run delete $slaves[_i].noPregnancyDays>>
			<</if>>
		<</if>>

		<<if _npc.sub < 20 && !Object.keys(_npc.clothes ?? {}).length && setup.percentageChance(50)>>
			<<set _npc.sub++>>
		<</if>>
		
		// Assigned jobs
		<<set _isSick = (typeof $slaves[_i].sick !== 'undefined')>>
		<<set _isRest = (typeof $slaves[_i].rest !== 'undefined')>>
		<<set _dayOff = _isSick || _isRest>>
		<<if $slaves[_i].assignedTo === 'garden' && _isHeatWave>>
			<<set $slaves[_i].gardenDay = 0>>
		<</if>>
		<<if $slaves[_i].assignedTo === 'garden' && !_isDayOff && !_isHeatWave>>
			<<if typeof $slaves[_i].stats['garden'] === 'undefined'>>
				<<set $slaves[_i].stats['garden'] = 0>>
			<</if>>
			<<set $slaves[_i].stats['garden']++>>
			
			// Learn skill
			<<if $slaves[_i].stats['garden'] > 100 && !($slaves[_i].skills ?? []).includes('gardener')>>
				<<if typeof $slaves[_i].skills === 'undefined'>>
					<<set $slaves[_i].skills = []>>
				<</if>>
				<<run $slaves[_i].skills.push('gardener')>>
				<<run setup.sleepMessages.addJob('<span class="skill">' + $slaves[_i].name + ' learned the gardener skill</span>', 'garden')>>
			<</if>>

			<<set $slaves[_i].gardenDay++>>
			<<set _foodGive = _giveFood>>
			<<if ($slaves[_i].skills ?? []).includes('gardener')>>
				<<set _foodGive += 2>>
			<</if>>
			<<if $slaves[_i].gardenDay == 3>>
				<<set $slaves[_i].gardenDay = 0>>
				<<set _totals.food += _foodGive>>
				<<if _isStorageAvailable>>
					<<pickup $storage 'food' _foodGive>>
				<<else>>
					<<pickup $backpack 'food' _foodGive>>
				<</if>>
				<<run setup.sleepMessages.addJob($slaves[_i].name + ' managed to grow <strong>' + _foodGive + '</strong> food in the garden', 'garden')>>
			<</if>>
		<</if>>
		<<if $slaves[_i].assignedTo === 'streets' && !_dayOff && !_isSandStorm>>
			<<set _girlChanceToDie = 5>>
			<<if ($slaves[_i].strength ?? 0) > 20>>
				<<set _girlChanceToDie = 3>>
			<<elseif ($slaves[_i].strength ?? 0) > 10>>
				<<set _girlChanceToDie = 4>>
			<</if>>
			
			<<if $characters.dom.quests.accepted_deal>>
				<<set _girlChanceToDie = 1>>
			<</if>>
			<<if setup.npcInventoryHas($slaves[_i], 'knife')>>
				<<set _girlChanceToDie -=1>>
			<</if>>
			<<if setup.percentageChance(_girlChanceToDie) && (!$characters.dom.quests.accepted_deal || setup.percentageChance(50))>>
				<<set _totals['streetworker'] = (_totals['streetworker'] ?? 0) - 1>>
				<<run setup.sleepMessages.addJob(_npc.name + ' <strong class="iitem">was found dead</strong> in the streets...', 'streets')>>
				<<set $slaves.splice(_i, 1)>>
				<<set _i-->>
				<<continue>>
			<<else>>
				<<setNpcStats 'slave' _i 'happy' -5>>
				<<if randomInteger(0, 1) === 0>>
					<<if !_npc.chastityBelt>>
						<<set $slaves[_i].virgin = false>>
					<</if>>
					<<set _moneyEarned = setup.jobs.getStreetsEarned(_npc)>>
					<<set $player.money += _moneyEarned>>
					<<set _totals.caps = (_totals.caps ?? 0) + _moneyEarned>>
					<<run setup.sleepMessages.addJob(_npc.name + ' had a client in the streets, ' + setup.pronounceWhat($slaves[_i]) + ' got you <strong>' + _moneyEarned + '</strong> caps', 'streets')>>
				
					<<if setup.pregnancyChance($slaves[_i]) && !setup.npcInventoryHas($slaves[_i], 'condom') && !_npc.chastityBelt>>
						<<set $slaves[_i].pregnancy = 0>>
						<<set $slaves[_i].pregnancy_father = 'unknown'>>
						<<set $slaves[_i].pregnancy_event = 'streets'>>
					<</if>>
				<</if>>
			<</if>>
		<</if>>
		
		// Starvation
		<<if _isHeatWave>>
			<<set $slaves[_i].food = -10>>
		<</if>>
		<<if $slaves[_i].food <= 10>>
			<<set _totals.food -= setup.cabinInventory.has('food') ? 1 : 0>>
			<<if $storage.has('food')>>
				<<drop $storage 'food' 1>> 
				<<set $slaves[_i].food to 100>>
				<<set $slaves[_i].happy++>>
			<<elseif $backpack.has('food')>>
				<<drop $backpack 'food' 1>> 
				<<set $slaves[_i].food to 100>>
				<<set $slaves[_i].happy++>>
			<</if>>

			<<if $slaves[_i].food <= -20>>
				<<set _totals['slave'] = (_totals['slave'] ?? 0) - 1>>
				<<run setup.sleepMessages.addMain('<span class="dead">' + _npc.name + ' died of hunger. You dont have enough food!</span>')>>
				<<set $slaves.splice(_i, 1)>>
				<<set _i-->>
				<<continue>>
			<<elseif $slaves[_i].food <= 10>>
				<<run setup.sleepMessages.addMain('<span class="starving">' + _npc.name + ' is starving</span>')>>
			<</if>>	
		<</if>>
		<<if setup.getAge($slaves[_i]) > 3>>
			<<set $slaves[_i].food -= 30>>
		<</if>>

		// Pregnancy
		<<if typeof $slaves[_i].pregnancy !== 'undefined'>>
			<<set $slaves[_i].pregnancy++>>
			<<if ($slaves[_i].traits ?? []).includes('breeder')>>
				<<set $slaves[_i].pregnancy++>>
			<</if>>
			<<if $slaves[_i].pregnancy == 8>>
				<<set _pregnantMsg = $slaves[_i].name + ' told you that <strong>she is pregnant</strong>.'>>
				<<if $slaves[_i].pregnancy_father !== 'mc'>>
					<<set _pregnantMsg = _pregnantMsg + ' <strong>You ARE NOT the father!</strong>'>>
						<<if !$pregnancyStreetsHappening && $slaves[_i].pregnancy_event === 'streets'>>
							<<set $pregnancyStreetsHappening = {
								type: 'slave',
								id: _i
							}>>
						<</if>>
				<</if>>
				
				<<run setup.sleepMessages.addMain(_pregnantMsg)>>
				<<set $characters.vincent.quests.pregnancy = true>>
			<</if>>
			
			<<set _miscarrieageChance = _hasWorkingHospital ? 3 : _hasDoctor ? 6 : 12>>
			<<set _streetWork = $slaves[_i].assignedTo === 'streets' && !_dayOff>>
			<<if $slaves[_i].pregnancy > 30 && _streetWork && setup.percentageChance(_miscarrieageChance)>>
				<<set _totals['pregnancy'] = (_totals['pregnancy'] ?? 0) - 1>>
				<<run setup.sleepMessages.addMain($slaves[_i].name + ' woke up with her blood all over her. <strong class="iitem">She had a miscarriage.</strong>')>>
				<<set $slaves[_i].happy -= 20>>
				<<set $slaves[_i].relationship -= 10>>
				<<run delete $slaves[_i].pregnancy>>
			<</if>>
			
			<<if !$pregnancyHappening && $slaves[_i].pregnancy > 260 && ($slaves[_i].pregnancy > 280 || randomInteger(1,3) === 3)>>
				<<set $pregnancyHappening = {
					type: 'slave',
					id: _i
				}>>
			<</if>>
		<</if>>
		
		// Sick
		<<if _isSick>>
			<<set $slaves[_i].sick.days-->>
			<<if _hasWorkingHospital || (_hasDoctor && setup.percentageChance(42))>>
				<<set $slaves[_i].sick.days-->>
			<</if>>
			<<if $slaves[_i].sick.days <= 0>>
				<<run delete $slaves[_i].sick>>
			<</if>>
		<</if>>
		// Resting
		<<if  _isRest>>
			<<if ['streets', 'nightclub'].includes($slaves[_i].assignedTo)>>
				<<setNpcStats slave _i happy +5>>
			<</if>>
			<<set $slaves[_i].rest.days-->>
			<<if $slaves[_i].rest.days <= 0>>
				<<run delete $slaves[_i].rest>>
			<</if>>
		<</if>>
	<</capture>>
<</for>>

<<run $slaves.filter(n=>n)>>
<<set $scavengingDidntReturn = null>>

<<for _guestI to 0; _guestI lt ($guests ?? []).length; _guestI++>>
	<<capture _guestI>>
		<<set _npc = $guests[_guestI]>>
		<<set $guests[_guestI].talked to false>>
		<<set $guests[_guestI].milked to false>>
		<<set $guests[_guestI].groped to false>>
		<<set $guests[_guestI].workout to false>>
		<<set $guests[_guestI].washed = false>>
		<<set $guests[_guestI].gift = false>>
		<<set $guests[_guestI].cosmetics = false>>
		<<set $guests[_guestI].washedBathhouse = false>>
		<<set $guests[_guestI].drunk = 0>>
		<<if $guests[_guestI].horny <= 90>>
			<<set $guests[_guestI].horny += window.randomInteger(1, 9)>>
		<<else>>
			<<set $guests[_guestI].horny = 0>>
		<</if>>
		<<if typeof $guests[_guestI].stats  === 'undefined'>>
			<<set $guests[_guestI].stats = {}>>
		<</if>>

		// buttplug
		<<if $guests[_guestI].buttplug && $guests[_guestI].anal < 20>>
			<<set $guests[_guestI].anal++>>
		<</if>>

		// dumbbell
		<<if setup.npcInventoryHas($guests[_guestI], 'dumbbell') && $guests[_guestI].strength < 30>>
			<<set $guests[_guestI].strength++>>
		<</if>>

		// Wash beauty
		<<if typeof $guests[_guestI].washDays !== 'undefined'>>
			<<set $guests[_guestI].washDays-->>
			<<set $guests[_guestI].beauty -= $guests[_guestI].washBeauty>>
			<<if $guests[_guestI].washDays <= 0>>
				<<run delete $guests[_guestI].washDays>>
			<</if>>
		<</if>>

		<<if _npc.sub < 20 && !Object.keys(_npc.clothes ?? {}).length && setup.percentageChance(50)>>
			<<set _npc.sub++>>
		<</if>>
		
		// Leave
		<<if $guests[_guestI].relationship < 0 || $guests[_guestI].happy < -70>>
			<<run setup.sleepMessages.addMain(_npc.name + ' was missing in the morning, ' + setup.pronounceWhat(_npc) + ' probably decided to leave this place.')>>
			<<guestRemove _guestI >>
			<<set _guestI-->>
			<<continue>>
		<</if>>

		<<if typeof $guests[_guestI].noPregnancyDays !== 'undefined'>>
			<<set $guests[_guestI].noPregnancyDays-->>
			<<if $guests[_guestI].noPregnancyDays <= 0>>
				<<run delete $guests[_guestI].noPregnancyDays>>
			<</if>>
		<</if>>
		
		<<set _isSick = (typeof $guests[_guestI].sick !== 'undefined')>>
		<<set _isRest = (typeof $guests[_guestI].rest !== 'undefined')>>
		<<set _dayOff = _isSick || _isRest>>
		// Assigned jobs
		<<if _npc.assignedTo === 'garden' && _isHeatWave>>
			<<set _npc.gardenDay = 0>>
		<</if>>
		<<if $guests[_guestI].assignedTo === 'garden' && !_dayOff && !_isHeatWave>>
			<<if typeof $guests[_guestI].stats['garden'] === 'undefined'>>
				<<set $guests[_guestI].stats['garden'] = 0>>
			<</if>>
			<<set $guests[_guestI].stats['garden']++>>

			// Learn skill
			<<if $guests[_guestI].stats['garden'] > 100 && !($guests[_guestI].skills ?? []).includes('gardener')>>
				<<if typeof $guests[_guestI].skills === 'undefined'>>
					<<set $guests[_guestI].skills = []>>
				<</if>>
				<<run $guests[_guestI].skills.push('gardener')>>
				<<run setup.sleepMessages.addJob('<span class="skill">' + $guests[_guestI].name + ' learned the gardening skill</span>', 'garden')>>
			<</if>>

			<<set $guests[_guestI].gardenDay++>>
			<<set _foodGive = _giveFood>>
			<<if ($guests[_guestI].skills ?? []).includes('gardener')>>
				<<set _foodGive += 2>>
			<</if>>
			<<if $guests[_guestI].gardenDay == 3>>
				<<set $guests[_guestI].gardenDay = 0>>
				<<set _totals.food += _foodGive>>
				<<if _isStorageAvailable>>
					<<pickup $storage 'food' _foodGive>>
				<<else>>
					<<pickup $backpack 'food' _foodGive>>
				<</if>>
				<<run setup.sleepMessages.addJob($guests[_guestI].name + ' managed to grow <strong>' + _foodGive + '</strong> food in the garden.', 'garden')>>
			<</if>>
		<</if>>
		
		
		<<if $guests[_guestI].assignedTo === 'streets' && !_dayOff && !_isSandStorm>>
			<<set _girlChanceToDie = 5>>
			<<if ($guests[_guestI].strength ?? 0) > 20>>
				<<set _girlChanceToDie = 3>>
			<<elseif ($guests[_guestI].strength ?? 0) > 10>>
				<<set _girlChanceToDie = 4>>
			<</if>>
			
			<<if $characters.dom.quests.accepted_deal>>
				<<set _girlChanceToDie = 1>>
			<</if>>
			<<if setup.npcInventoryHas($guests[_guestI], 'knife')>>
				<<set _girlChanceToDie -=1>>
			<</if>>
			<<if setup.percentageChance(_girlChanceToDie) && (!$characters.dom.quests.accepted_deal || setup.percentageChance(50))>>
				<<set _totals['streetworker'] = (_totals['streetworker'] ?? 0) - 1>>
				<<run setup.sleepMessages.addJob(_npc.name + ' <strong class="iitem">was found dead</strong> in the streets!', 'streets')>>
				<<guestRemove _guestI >>
				<<set _guestI-->> 
				<<continue>>
			<<else>>
				<<setNpcStats 'guest' _guestI 'happy' -5>>
				<<if randomInteger(0, 1) === 0>>
					<<if !_npc.chastityBelt>>
						<<set _npc.virgin = false>>
					<</if>>
					<<set _moneyEarned = setup.jobs.getStreetsEarned(_npc)>>
					<<set $player.money += _moneyEarned>>
					<<set _totals.caps = (_totals.caps ?? 0) + _moneyEarned>>
					<<run setup.sleepMessages.addJob(_npc.name + ' had a client in the streets. She got you <strong>' + _moneyEarned + '</strong> caps', 'streets')>>
					<<if setup.pregnancyChance($guests[_guestI]) && !setup.npcInventoryHas($guests[_guestI], 'condom') && !_npc.chastityBelt>>
						<<set $guests[_guestI].pregnancy = 0>>
						<<set $guests[_guestI].pregnancy_father = 'unknown'>>
						<<set $guests[_guestI].pregnancy_event = 'streets'>>
					<</if>>
				<</if>>
			<</if>>
		<</if>>
		
		<<set _hunter_no_bow = ( $automatization.hunter ?? false) &&
			$guests[_guestI].assignedTo === 'hunter' && !setup.npcInventoryHas($guests[_guestI], 'bow') >>
		<<if (_hunter_no_bow || $guests[_guestI].assignedTo === 'forest')  && !_isSick && !_isSandStorm>>
			<<if typeof $guests[_guestI].stats['forest'] === 'undefined'>>
				<<set $guests[_guestI].stats['forest'] = 0>>
			<</if>>
			<<set $guests[_guestI].stats['forest']++>>
			
			// Learn skill
			<<if $guests[_guestI].stats['forest'] > 100 && !($guests[_guestI].skills ?? []).includes('woodcraft')>>
				<<if typeof $guests[_guestI].skills === 'undefined'>>
					<<set $guests[_guestI].skills = []>>
				<</if>>
				<<run $guests[_guestI].skills.push('woodcraft')>>
				<<run setup.sleepMessages.addJob('<span class="skill">' + $guests[_guestI].name + ' learned the woodcraft skill</span>', 'forest')>>
			<</if>>

			<<set _giveWood = ($guests[_guestI].strength > 30 ? 2 : 1)>>
			<<if ($guests[_guestI].skills ?? []).includes('woodcraft')>>
				<<set _giveWood++>>
			<</if>>
			<<if setup.npcInventoryHas($guests[_guestI], 'axe')>>
				<<set _giveWood++>>
			<</if>>
			<<set _totals.wood += _giveWood>>
			<<if _isStorageAvailable>>
				<<pickup $storage 'wood' _giveWood>>
			<<else>>
				<<pickup $backpack 'wood' _giveWood>>
			<</if>>
			<<run setup.sleepMessages.addJob(_npc.name + ' managed to collect <strong>' + _giveWood + '</strong> wood in the forest', 'forest')>>
			<<if setup.percentageChance(10)>>
				<<set _totals.food++>>
				<<if _isStorageAvailable>>
					<<pickup $storage 'food' 1>>
				<<else>>
					<<pickup $backpack 'food' 1>>
				<</if>>
				<<run setup.sleepMessages.addJob(_npc.name + ' managed to find some berries while working in the forest. <strong class="iitem">+1 food</strong>', 'forest')>>
			<</if>>
		<</if>>
		<<unset _hunter_no_bow>>

		<<if $guests[_guestI].assignedTo === 'kitchen' && !_isSick>>
			<<set $guests[_guestI].stats['kitchen'] ??= 0>>
			<<set $guests[_guestI].stats['kitchen']++>>

			// Learn skill
			<<if $guests[_guestI].stats['kitchen'] > 100 && !($guests[_guestI].skills ?? []).includes('cook')>>
				<<if typeof $guests[_guestI].skills === 'undefined'>>
					<<set $guests[_guestI].skills = []>>
				<</if>>
				<<run $guests[_guestI].skills.push('cook')>>
				<<run setup.sleepMessages.addJob('<span class="skill">Guest ' + _npc.name + ' learned the cook skill</span>', 'kitchen')>>
			<</if>>

		<</if>>

		<<if $guests[_guestI].assignedTo === 'scavenging' && !_isSick && !_isSandStorm>>
			<<if typeof $guests[_guestI].stats['scavenging'] === 'undefined'>>
				<<set $guests[_guestI].stats['scavenging'] = 0>>
			<</if>>
			<<set $guests[_guestI].stats['scavenging']++>>
			
			// Learn skill
			<<if $guests[_guestI].stats['scavenging'] > 100 && !($guests[_guestI].skills ?? []).includes('scavenger')>>
				<<if typeof $guests[_guestI].skills === 'undefined'>>
					<<set $guests[_guestI].skills = []>>
				<</if>>
				<<run $guests[_guestI].skills.push('scavenger')>>
				<<run setup.sleepMessages.addJob('<span class="skill">' + _npc.name + ' learned the scavenger skill</span>', 'scavenging')>>
			<</if>>

			<<set _chanceOfNotComingHome = 10>>
			<<if $guests[_guestI].strength >= 30>>
				<<set _changeOfNotComingHome -=4>>
			<</if>>
			<<if ($guests[_guestI].skills ?? []).includes('scavenger')>>
				<<set _chanceOfNotComingHome -=4>>
			<</if>>
			<<if setup.npcInventoryHas($guests[_guestI], 'knife')>>
				<<set _chanceOfNotComingHome -=1>>
			<</if>>
			<<if setup.percentageChance(_chanceOfNotComingHome) && $scavengingDidntReturn === null && !$pregnancyHappening && setup.percentageChance(30)>>				
				<<set $scavengingDidntReturn = _guestI>>
			<<else>>
			  <<set _randomItem = either(_randomScavengingItems)>>
			  <<set _giveCount = 1>>
			  <<if ($guests[_guestI].skills ?? []).includes('scavenger') && setup.percentageChance(50)>>
				<<set _giveCount++>>
			  <</if>>
			  <<set _totals[_randomItem] = (_totals[_randomItem] ?? 0) + _giveCount>>
			  <<if _isStorageAvailable>>
			  	<<pickup $storage _randomItem _giveCount>>
			  <<else>>
			  	<<pickup $backpack _randomItem _giveCount>>
			  <</if>>
			  <<run setup.sleepMessages.addJob(_npc.name + ' managed to collect <strong>' + _giveCount + ' ' + Item.get(_randomItem).name + '</strong> while scavenging.', 'scavenging')>>
			<</if>>
		<</if>>
		
		<<if $guests[_guestI].assignedTo === 'mistress' && !_isSick>>
			<<for _mistressSlaveI, _mistressSlave range $slaves>>
				<<if setup.getAge(_mistressSlave) < 18>>
					<<continue>>
				<</if>>
				<<if setup.percentageChance(30) && _mistressSlave.sub < 100>>
					<<run setup.sleepMessages.addJob(_npc.name + ' increased ' + setup.displayName(_mistressSlave) + '\'s submission')>>
					<<set $slaves[_mistressSlaveI].sub = Math.min(100, ($slaves[_mistressSlaveI].sub + 1))>>
				<</if>>
			<</for>>
		<</if>>

		<<if $guests[_guestI].assignedTo === 'hunter' && !_isSick && setup.npcInventoryHas($guests[_guestI], 'bow') && !_isSandStorm>>
			<<set _percentageHunter = 10>>
			<<if $guests[_guestI].strength > 50>>
				<<set _percentageHunter += 25>>
			<<elseif $guests[_guestI].strength > 20>>
				<<set _percentageHunter += 10>>
			<</if>>
			<<set _hunterItem = 'food'>>
			<<set _giveCount = randomInteger(2,5)>>

			<<if setup.percentageChance(20)>>
				<<set _hunterItem = 'pelt_wolf'>>
				<<set _giveCount = randomInteger(1,2)>>
			<</if>>

			<<if setup.percentageChance(_percentageHunter)>>
				<<set _totals[_hunterItem] = (_totals[_hunterItem] ?? 0) + _giveCount>>
				<<if _isStorageAvailable>>
			  		<<pickup $storage _hunterItem _giveCount>>
			  	<<else>>
			  		<<pickup $backpack _hunterItem _giveCount>>
			  	<</if>>
				<<run setup.sleepMessages.addJob(_npc.name + ' managed to get ' + _giveCount  + ' ' + Item.get(_hunterItem).name + ' while hunting.', 'hunting')>>
			<</if>>
		<</if>>

		<<if _npc.assignedTo === 'nightclub' && !_dayOff && !_isSandStorm>>
			<<setNpcStats 'guest' _guestI 'happy' -5>>
			<<if $guests[_guestI].gender == 0>>
				<<set _moneyEarned = randomInteger(5, 9)>>
			<<elseif $guests[_guestI].gender == 2>>			
				<<set _moneyEarned = randomInteger(3, 7)>>
			<<else>>
				<<set _moneyEarned = randomInteger(1, 5)>>
			<</if>>
			<<if (_npc.traits ?? []).includes('nymphomaniac')>>
				<<set _moneyEarned = _moneyEarned * 2>>
			<</if>>
			<<set _moneyEarnedTax = 50>>
			<<set _moneyEarned += Math.round(_npc.sub / 25, 0)>>
			<<set _moneyEarned = parseInt(_moneyEarned)>>
			<<set _moneyEarned = _moneyEarned - Math.round((_moneyEarnedTax / 100) * _moneyEarned, 0)>>
			<<set $player.money += _moneyEarned>>
			<<set _totals.caps = (_totals.caps ?? 0) + _moneyEarned>>
			<<run setup.sleepMessages.addJob(_npc.name + ' had a client in the nightclub. She got you <strong>' + _moneyEarned + '</strong> caps', 'nightclub')>>
		<</if>>
		

		// Pregnancy
		<<if typeof $guests[_guestI].pregnancy !== 'undefined'>>
			<<set $guests[_guestI].pregnancy++>>
			<<if ($guests[_guestI].traits ?? []).includes('breeder')>>
				<<set $guests[_guestI].pregnancy++>>
			<</if>>
			<<if $guests[_guestI].pregnancy == 8>>
				<<set _pregnantMsg = $guests[_guestI].name + ' told you that <strong>she is pregnant</strong>.'>>
				<<if $guests[_guestI].pregnancy_father !== 'mc'>>
					<<set _pregnantMsg = _pregnantMsg + ' <strong>You ARE NOT the father!</strong>'>>
					<<if !$pregnancyStreetsHappening && $guests[_guestI].pregnancy_event === 'streets'>>
						<<set $pregnancyStreetsHappening = {
							type: 'guest',
							id: _guestI
						}>>
					<</if>>
				<</if>>
				
				<<run setup.sleepMessages.addMain(_pregnantMsg)>>
				<<set $characters.vincent.quests.pregnancy = true>>
			<</if>>
			
			<<set _miscarrieageChance = _hasWorkingHospital ? 3 : _hasDoctor ? 6 : 12>>
			<<set _streetWork = $guests[_guestI].assignedTo === 'streets' && !_dayOff>>
			<<if $guests[_guestI].pregnancy > 30 && _streetwork && setup.percentageChance(_miscarrieageChance)>>
				<<set _totals['pregnancy'] = (_totals['pregnancy'] ?? 0) - 1>>
				<<run setup.sleepMessages.addMain($guests[_guestI].name + ' woke up with her blood all over her. <strong class="iitem">She had a miscarriage</strong>')>>
				<<set $guests[_guestI].happy -= 20>>
				<<set $guests[_guestI].relationship -= 10>>
				<<run delete $guests[_guestI].pregnancy>>
			<</if>>
			
			<<if !$pregnancyHappening && $guests[_guestI].pregnancy > 260 && ($guests[_guestI].pregnancy > 280 || randomInteger(1,3) === 3)>>
				<<set $pregnancyHappening = {
					type: 'guest',
					id: _guestI
				}>>
			<</if>>
		<</if>>
		
		// Starvation
		<<if _isHeatWave>>
			<<set $guests[_guestI].food = -10>>
		<</if>>
		<<if $guests[_guestI].food <= 10>>
  			<<set _totals.food -= setup.cabinInventory.has('food') ? 1 : 0>>
			<<if $storage.has('food')>>
				<<drop $storage 'food' 1>> 
				<<set $guests[_guestI].food to 100>>
				<<set $guests[_guestI].happy++>>
			<<elseif $backpack.has('food')>>
				<<drop $backpack 'food' 1>> 
				<<set $guests[_guestI].food to 100>>
				<<set $guests[_guestI].happy++>>
			<</if>>

			<<if $guests[_guestI].food <= -20>>
				<<run setup.sleepMessages.addMain('<span class="left">' + _npc.name + ' left because you don\'t not enough food!</span>')>>
				<<guestRemove _guestI>>
				<<set _guestI-->>
				<<continue>>
			<<elseif $guests[_guestI].food <= 10>>
				<<run setup.sleepMessages.addMain('<span class="starving">' + _npc.name + ' is starving!</span>')>>
			<</if>>
		<</if>>
		<<if setup.getAge($guests[_guestI]) > 3>>
			<<set $guests[_guestI].food -= 30>>
		<</if>>
		
		// Sick
		<<if _isSick>>
			<<set $guests[_guestI].sick.days-->>
			<<if _hasWorkingHospital || (_hasDoctor && setup.percentageChance(42))>>
				<<set $guests[_guestI].sick.days-->>
			<</if>>
			<<if $guests[_guestI].sick.days <= 0>>
				<<run delete $guests[_guestI].sick>>
			<</if>>
		<</if>>
		// Resting
		<<if _isRest>>
			<<if ['streets', 'nightclub'].includes($guests[_guestI].assignedTo)>>
				<<setNpcStats guest _guestI happy +5>>
			<</if>>
			<<set $guests[_guestI].rest.days-->>
			<<if $guests[_guestI].rest.days <= 0>>
				<<run delete $guests[_guestI].rest>>
			<</if>>
		<</if>>
	<</capture>>
<</for>>

<<for _nurseryI to 0; _nurseryI lt ($nursery ?? []).length; _nurseryI++>>
	<<capture _nurseryI>>
		// Starvation
		<<if $nursery[_nurseryI].food <= 10>>
  			<<set _totals.food -= setup.cabinInventory.has('food') ? 1 : 0>>
			<<if $storage.has('food')>>
				<<drop $storage 'food' 1>> 
				<<set $nursery[_nurseryI].food to 100>>
			<<elseif $backpack.has('food')>>
				<<drop $backpack 'food' 1>> 
				<<set $nursery[_nurseryI].food to 100>>
			<<else>>
				<<run setup.sleepMessages.add('<span class="dead">Kid ' + $nursery[_nurseryI].name + ' died because you don\'t have enough food!</span>', 'nursery')>>
				<<set $nursery.splice(_nurseryI, 1)>>
				<<set _nurseryI-->>
				<<continue>>
			<</if>>
		<</if>>
		<<if setup.getAge($nursery[_nurseryI]) > 3>>
			<<set $nursery[_nurseryI].food -= 30>>
		<</if>>
		
		<<if setup.getAge($nursery[_nurseryI]) >= 18>>
			<<run setup.sleepMessages.add('Kid ' + $nursery[_nurseryI].name + ' has grown up and moved to the guest house.', 'nursery')>>
			<<run $guests.push($nursery[_nurseryI])>>
			<<set $nursery.splice(_nurseryI, 1)>>
			<<set _nurseryI-->>
		<</if>>
	<</capture>>
<</for>>

<<for _charI, _char range $characters>>
	<<if typeof $characters[_charI].quests !== 'undefined'>>
		<<set $characters[_charI].talked = false>>

		// Pregnancy
		<<if typeof $characters[_charI].pregnancy !== 'undefined'>>
			<<set $characters[_charI].pregnancy++>>
			<<if ($characters[_charI].traits ?? []).includes('breeder')>>
				<<set $characters[_charI].pregnancy++>>
			<</if>>
			<<if $characters[_charI].pregnancy == 8>>
				<<run setup.sleepMessages.addMain($characters[_charI].name + ' told you that <strong>she is pregnant</strong>.')>>
				<<set $characters.vincent.quests.pregnancy = true>>
				<<if _charI === 'blair'>>
					<<set $characters.blair.quests.pregnancy = true>>
				<</if>>
			<</if>>
			
			<<if !$pregnancyHappening && $characters[_charI].pregnancy > 260 && ($characters[_charI].pregnancy > 280 || randomInteger(1,3) === 3)>>
				<<set $pregnancyHappening = {
					type: 'character',
					id: _charI
				}>>
			<</if>>
		<</if>>
	<</if>>
<</for>>

<<if isMetChar('laura')>>
	<<set $characters.laura.quests.sampleToday = false>>
	<<if $characters.laura.quests.productionSamples >= 3 && $characters.laura.quests.living && $characters.laura.quests.productionLastDay < ($game.day - $characters.laura.quests.productionDaysPerPotion)>>
		<<set $characters.laura.quests.productionSamples -= 3>>
		<<set _totals['growth_potion'] = (_totals['growth_potion'] ?? 0) + 1>>
		<<pickup $backpack 'growth_potion' 1>>
		<<set $characters.laura.quests.productionLastDay = $game.day>>
		<<run setup.sleepMessages.addMain('Laura crafted a new <strong class="iitem">growth potion</strong>')>>
	<</if>>
<</if>>


<<set _sleepDead = null>>

<<include 'sleepPerks'>>
<<include 'sleepRottenFood'>>
<<include 'sleepShowTotals'>>
<<include 'sleepManageGoods'>>
<<unset $tmpGirlCapture>>

// moon
<<if setup.isNewMoon()>>
	<<if $characters.vincent.quests.pregnancy_talked>>
		<<run setup.sleepMessages.add('This time of the month, around the new moon, the glowing mushrooms seem to be more abundant. Visit the forest!', 'weather')>>
	<<else>>
		<<run setup.sleepMessages.add('This time of the month, around the new moon, strange things occur in the forest...', 'weather')>>
	<</if>>
<<elseif setup.isFullMoon()>>
	<<run setup.sleepMessages.add('This time of the month, around the full moon, you may have luck with the wolves. Visit the forest!', 'weather')>>
<</if>>

<<if $player.hunger <= 0 && !_sleepDead>>
	<<set _sleepDead = 'hunger'>>
<</if>>
<<if !_sleepDead>>
<<set $player.showered to false>>
	<<updatemeter '$energyBar' `$player.energy / $player.maxEnergy`>>
	<<updatemeter '$hungerBar' `$player.hunger / $player.maxHunger`>>
	<<if $args[0]>>
		<<goto $args[0]>>
	<<else>>
		<<goto "Bedroom-sleep">>
	<</if>>
<<else>>
	<<set $game.death_reason = _sleepDead>>
	<<goto "Dead">>
<</if>>


<<shopMerchantUpdate>>
<<if _hasWorkingHospital>>
	<<sleepHospital>>
<</if>>
<<run setup.relationshipBetween.run()>>
<<set _matchesBetween = setup.relationshipBetween.getMatches()>>
<<run console.log(_matchesBetween)>>
<<if $args[0]>>
	<<set $morningMessages = []>>
<<else>>
	<<set $morningMessages = setup.sleepMessages.get()>>
<</if>>

<</widget>>


